{"version":3,"file":"../post.js","sources":["post.js"],"sourcesContent":["\"use strict\";\n/// <reference types=\"jquery\" />\n/// <reference path=\"../types/jquery/index.d.ts\" />\n/// <reference path=\"./browser.d.ts\"/>\nvar defaultOptions = {\n    src: 'data-src',\n    srcset: 'data-srcset',\n    selector: '.lazyload',\n    root: null,\n    rootMargin: '0px',\n    threshold: 0,\n    delayLoad: 300,\n};\nvar timerKey = 'timerid';\nvar getTimerID = function (el) {\n    var textID = el.dataset[timerKey];\n    return textID === undefined ? 0 : parseInt(textID);\n};\nvar setTimerID = function (el, id) {\n    if (id === void 0) { id = 0; }\n    if (id == 0) {\n        delete el.dataset[timerKey];\n    }\n    else {\n        el.dataset[timerKey] = id.toString();\n    }\n};\n/**\n * Based on Lazy Load plugin by Mika Tuupola.\n * @see https://appelsiini.net/projects/lazyload\n */\nvar LazyLoad = /** @class */ (function () {\n    function LazyLoad(images, options) {\n        if (options === void 0) { options = {}; }\n        this.options = jQuery.extend({}, options, defaultOptions);\n        this.images =\n            images.length > 0\n                ? images\n                : document.querySelectorAll(this.options.selector);\n        if (window.IntersectionObserver) {\n            this.observe();\n        }\n        else {\n            // pre-load all image if no observer available\n            console.warn('Browser does not support IntersectionObserver');\n            this.images.forEach(this.loadImage);\n        }\n    }\n    LazyLoad.prototype.delayLoad = function (el) {\n        var _this = this;\n        var timerID = getTimerID(el);\n        if (timerID == 0) {\n            timerID = setTimeout(function () {\n                _this.observer.unobserve(el);\n                _this.loadImage(el);\n                setTimerID(el); // remove timer data\n            }, this.options.delayLoad);\n            setTimerID(el, timerID);\n        }\n    };\n    LazyLoad.prototype.cancelLoad = function (el) {\n        var timerID = getTimerID(el);\n        if (timerID > 0) {\n            clearTimeout(timerID);\n            setTimerID(el); // remove timer data\n        }\n    };\n    LazyLoad.prototype.observe = function () {\n        var _this = this;\n        this.observer = new IntersectionObserver(function (entries) {\n            entries.forEach(function (e) {\n                var el = e.target;\n                if (e.isIntersecting) {\n                    _this.delayLoad(el);\n                }\n                else {\n                    _this.cancelLoad(el);\n                }\n            });\n        }, {\n            root: this.options.root,\n            rootMargin: this.options.rootMargin,\n            threshold: this.options.threshold,\n        });\n        this.images.forEach(function (el) { return _this.observer.observe(el); });\n    };\n    LazyLoad.prototype.loadImage = function (el) {\n        var src = el.getAttribute(this.options.src);\n        if (el.tagName.toLowerCase() == 'img') {\n            var img = el;\n            var srcset = img.getAttribute(this.options.srcset);\n            if (src !== null)\n                img.src = src;\n            if (srcset !== null)\n                img.srcset = srcset;\n        }\n        else {\n            ;\n            el.style.backgroundImage = \"url(\" + src + \")\";\n        }\n    };\n    return LazyLoad;\n}());\nif (jQuery) {\n    var $_1 = jQuery;\n    $_1.fn.lazyload = function (options) {\n        new LazyLoad($_1.makeArray(this), options);\n        return this;\n    };\n}\n\"use strict\";\n/// <reference types=\"jquery\" />\n/// <reference path=\"../types/jquery/index.d.ts\" />\n/// <reference path=\"./browser.d.ts\"/>\n/// <reference path=\"./util.ts\"/>\n/// <reference path=\"./lazy-load.ts\"/>\n/**\n * Set up lazy loading and light box for post images. Depends on post images\n * having data-src, data-big, data-big-width and data-big-height\n * attributes.\n *\n * @see http://www.appelsiini.net/projects/lazyload\n */\n$(function () {\n    var $photos = $('figure');\n    var $lb = $('#light-box');\n    // clicking on lightbox hides it and re-enables page scroll\n    $lb.on('click', function () {\n        $lb.off('mousemove').hide(0, enablePageScroll);\n    });\n    // clicking an image opens it in a lightbox\n    $photos.find('img').on('click touchstart', lightBox).lazyload();\n    // hovering photo info button loads camera detail\n    $photos.find('.info-button').one('mouseover', function () {\n        var $button = $(this);\n        $button\n            .addClass('loading')\n            .html(iconHtml('cloud_download', 'Loading …'))\n            .load($button.parent().data('exif'), function () {\n            $button.removeClass('loading').addClass('loaded');\n        });\n    });\n    /**\n     * Material icon HTML\n     */\n    function iconHtml(name, text) {\n        return util.html.icon(name).get(0).outerHTML + '<p>' + text + '</p>';\n    }\n    /**\n     * Simple light box for clicked image. Post image has HTML data attributes\n     * defining the big image URL and dimensions.\n     */\n    function lightBox(event) {\n        event.preventDefault();\n        /** Post image */\n        var $img = $(this);\n        /** Big image */\n        var $big = $lb.find('img');\n        /** Whether big image is already browser cached */\n        var loaded = $img.data('big-loaded');\n        var isTouch = event.type == 'touchstart';\n        var size = new Size($img.data('big-width'), $img.data('big-height'));\n        /** click position relative to image corner */\n        var fromCorner = { top: 0, left: 0 };\n        /**\n         * Update image position and panning speed to accomodate window size\n         */\n        var updateSize = function (event) {\n            var cursor = 'zoom-out';\n            size.update();\n            if (isTouch) {\n                $lb.on('touchstart', beginDrag);\n                $lb.on('touchmove', updateDragPosition);\n                centerImage();\n            }\n            else if (size.needsToPan) {\n                cursor = 'move';\n                $lb.on('mousemove', updateHoverPosition);\n            }\n            else {\n                $lb.off('mousemove', updateHoverPosition);\n            }\n            // set initial desktop position and cursor\n            if (!isTouch) {\n                updateHoverPosition(event);\n                $big.css('cursor', cursor);\n            }\n        };\n        /**\n         * Update image position within light box\n         */\n        var updateHoverPosition = function (event) {\n            var x = event.clientX;\n            var y = event.clientY;\n            if (x !== undefined && y !== undefined) {\n                var dx = size.width.offset(x);\n                var dy = size.height.offset(y);\n                $big.css({ transform: \"translate(\" + dx + \"px, \" + dy + \"px)\" });\n            }\n        };\n        var centerImage = function () {\n            var dx = size.width.center();\n            var dy = size.height.center();\n            $big.css({ transform: \"translate(\" + dx + \"px, \" + dy + \"px)\" });\n        };\n        var firstTouch = function (event) {\n            var x = 0;\n            var y = 0;\n            var touches = event.targetTouches;\n            if (touches !== undefined) {\n                x = touches[0].clientX;\n                y = touches[0].clientY;\n            }\n            return [x, y];\n        };\n        var beginDrag = function (event) {\n            var imageAt = $big.position();\n            var _a = firstTouch(event), touchX = _a[0], touchY = _a[1];\n            fromCorner.left = imageAt.left - touchX;\n            fromCorner.top = imageAt.top - touchY;\n        };\n        var updateDragPosition = function (event) {\n            var _a = firstTouch(event), touchX = _a[0], touchY = _a[1];\n            var dx = fromCorner.left + touchX;\n            var dy = fromCorner.top + touchY;\n            $big.css({ transform: \"translate(\" + dx + \"px, \" + dy + \"px)\" });\n        };\n        if (loaded === undefined) {\n            loaded = false;\n        }\n        if (loaded) {\n            // assign directly if big image has already been loaded\n            $big.attr('src', $img.data('big'));\n        }\n        else {\n            // assign lower resolution image while the bigger one is loading\n            $big.attr('src', $img.data('src'));\n            // load photo in detached element\n            $('<img />')\n                .bind('load', function () {\n                // assign big image to light box once it's loaded\n                $big.attr('src', this.src);\n                $img.data('big-loaded', true);\n            })\n                .attr('src', $img.data('big'));\n        }\n        $big.height(size.height.image).width(size.width.image);\n        // position based on initial click\n        updateSize(event);\n        $lb.show(0, disablePageScroll);\n        // update panning calculations if window resizes\n        $(window).resize(updateSize);\n    }\n    function disablePageScroll() {\n        $('html').css({ overflow: 'hidden' });\n    }\n    function enablePageScroll() {\n        $(window).off('resize');\n        $('html').css({ overflow: 'auto' });\n    }\n    /**\n     * ```\n     *  ╔════════╤════════════════╗\n     *  ║        │ extra          ║\n     *  ║   ╔════╧═══╤════════╗   ║\n     *  ║   ║        │ from   ║   ║\n     *  ║   ║        ┼ center ║   ║\n     *  ║   ║ window          ║   ║\n     *  ║   ╚═════════════════╝   ║\n     *  ║ image                   ║\n     *  ╚═════════════════════════╝\n     * ```\n     * Represent image width or height dimension compared to the window to\n     * calculate panning amount and speed.\n     */\n    var Length = /** @class */ (function () {\n        function Length(forImage) {\n            this.image = parseInt(forImage);\n            this.window = 0;\n            this.extra = 0;\n            this.panRatio = 0;\n        }\n        /**\n         * Update window dimension and calculate how much larger it is than image.\n         */\n        Length.prototype.update = function (forWindow) {\n            this.window = forWindow;\n            this.extra = (this.window - this.image) / 2;\n        };\n        /**\n         * Calculate ratio for this dimension. Leading number is factor by which\n         * to accelerate panning so edge of image is visible before cursor\n         * reaches edge of window.\n         */\n        Length.prototype.ratio = function () {\n            return 2 * ((this.window - this.image) / this.window);\n        };\n        /**\n         * Get image offset based on mouse position.\n         * @param m Current mouse position in this dimension\n         */\n        Length.prototype.offset = function (m) {\n            var subtract = this.extra > 0 ? 0 : (this.window / 2 - m) * this.panRatio;\n            return this.extra - subtract;\n        };\n        /**\n         * Get image offset necessary to center the image.\n         */\n        Length.prototype.center = function () {\n            return this.extra / 2;\n        };\n        return Length;\n    }());\n    /**\n     * Represent image size.\n     */\n    var Size = /** @class */ (function () {\n        function Size(imageWidth, imageHeight) {\n            this.width = new Length(imageWidth);\n            this.height = new Length(imageHeight);\n        }\n        /**\n         * Update calculations if window is resized.\n         */\n        Size.prototype.update = function () {\n            this.height.update(window.innerHeight);\n            this.width.update(window.innerWidth);\n            this.needsToPan = this.width.extra < 0 || this.height.extra < 0;\n            if (this.needsToPan) {\n                // pan image using length with biggest ratio\n                // or if one dimension needs no panning then use the other dimension\n                this.height.panRatio = this.width.panRatio =\n                    this.width.extra < this.height.extra && this.width.extra < 0\n                        ? this.width.ratio()\n                        : this.height.ratio();\n            }\n        };\n        return Size;\n    }());\n});\n"],"names":["defaultOptions","src","srcset","selector","root","rootMargin","threshold","delayLoad","timerKey","getTimerID","el","textID","dataset","undefined","parseInt","setTimerID","id","toString","LazyLoad","images","options","this","jQuery","extend","length","document","querySelectorAll","window","IntersectionObserver","observe","console","warn","forEach","loadImage","prototype","_this","timerID","setTimeout","observer","unobserve","cancelLoad","clearTimeout","entries","e","target","isIntersecting","getAttribute","tagName","toLowerCase","img","style","backgroundImage","$_1","fn","lazyload","makeArray","$","$photos","$lb","disablePageScroll","css","overflow","enablePageScroll","off","on","hide","find","event","preventDefault","updateSize","cursor","size","update","isTouch","beginDrag","updateDragPosition","centerImage","needsToPan","updateHoverPosition","$big","firstTouch","x","y","touches","targetTouches","clientX","clientY","$img","loaded","data","type","Size","fromCorner","top","left","dx","width","offset","dy","height","transform","center","imageAt","position","_a","touchX","touchY","attr","bind","image","show","resize","one","$button","addClass","html","util","icon","get","outerHTML","load","parent","removeClass","Length","forWindow","extra","ratio","m","subtract","panRatio","forImage","innerHeight","innerWidth","imageWidth","imageHeight"],"mappings":"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"}